package algorithmImpl;

public class QuickSort {
	
	//private int[] input = {4,7,2,1,6,8,8,3,2,5,9,0,7};
	private int[] input = {26,1,22,44,28,49,44,43,13,19,12,50};
	//private int[] output = new int[input.length];
	
	public int[] increaseSolution(int[] input){
		
		int low = 0;
		int high = input.length;
		int currentIndex;
		
		int counter = 0;
		currentIndex = step(low, high);
		high = currentIndex;
		//left partition
		while(low!=high-1){
			high = step(low, high);
			System.out.print("\n output Result of iteration_"+counter+": ");
			for(int i = 0; i < input.length; i++){
				System.out.print(" " +input[i]+" ");
			}
			counter++;
			
		}
		//right partition
		//low=
		
		return input;
	}
	
	public int step(int low, int high){
		System.out.print("\n Processing partition: "+input[low]+" ");
		int pivot = input[low];
		int swapIndex = low + 1;
		for(int i = low + 1; i < high; i++){
			System.out.print(input[i]+" ");
			if(input[i] < pivot){
				swap(i, swapIndex);
				swapIndex++;
			}
		}
		swap(low, swapIndex-1);
		//input[low] = pivot;
		//output[swapIndex-1] = pivot;
		return swapIndex-1;
	}
	
	private void swap(int x, int y){
		int temp = input[x];
		input[x] = input[y];
		input[y] = temp;
	}
	
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		QuickSort sort = new QuickSort();
		sort.increaseSolution(sort.input);
		
	}

}
