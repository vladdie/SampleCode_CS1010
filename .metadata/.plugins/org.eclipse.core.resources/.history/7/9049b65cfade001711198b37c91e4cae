package algorithmImpl;

public class QuickSort {
	
	//private int[] input = {4,7,2,1,6,8,8,3,2,5,9,0,7};
	private int[] input = {26,1,22,44,28,49,44,43,13,19,12,50};
	private int[] output = new int[input.length];
	
	public int[] increaseSolution(int[] input){
		
		int low = 0;
		int high = input.length;
		int currentIndex;
		
		int counter = 0;
		boolean flag = false;
		while(counter!=input.length){
			if(counter == 0){
				currentIndex = step(low, high);
				output[currentIndex] = input[currentIndex];
				counter++;
				System.out.println("Number of sorted value: "+counter);
				continue;
			}
			//find out continuous zeros in output
			for(int i = 0; i< output.length; i++){
				if(output[i] == 0 && !flag){
					low = i;
					flag = true;
				}
				if(output[i] != 0 && flag){
					high = i - 1;
					break;
				}
			}
			currentIndex = step(low, high);
			output[currentIndex] = input[currentIndex];
			counter++;
			System.out.println("Number of sorted value: "+counter);
		}
		
		
		
		
		return input;
	}
	
	public int step(int low, int high){
		System.out.print("Processing partition: "+input[low]);
		int pivot = input[low];
		int swapIndex = 1;
		for(int i = low + 1; i < high; i++){
			System.out.print(input[i]);
			if(input[i] < pivot){
				swap(input[i], pivot);
				swapIndex++;
			}
		}
		swap(pivot, swapIndex-1);
		return swapIndex-1;
	}
	
	private void swap(int x, int y){
		int temp = x;
		x = y;
		y = temp;
	}
	
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		QuickSort sort = new QuickSort();
		sort.increaseSolution(sort.input);
		for(int i = 0;i < sort.output.length; i++)
		System.out.print(sort.output[i]+" ");
	}

}
